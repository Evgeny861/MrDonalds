{"version":3,"sources":["image/banner.png","Components/NavBar.js","Components/DBMenu.js","Components/ListItem.js","Components/Banner.js","Components/Menu.js","Components/GlobalStyle.js","App.js","serviceWorker.js","index.js","image/logo.svg","image/sign.svg"],"names":["module","exports","NavBarStyled","styled","header","Logo","div","H1","h1","ImgLogo","img","Login","button","LoginImg","NavBar","src","logoImg","alt","Sign","dbMenu","burger","name","id","price","toppings","other","choices","List","ul","Item","li","ListItem","itemList","map","item","key","toLocaleString","style","currency","Div","props","Banner","BannerImg","MenuStyled","main","SectionMenu","section","Menu","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6052da34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner.73fbbbd3.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport logoImg from '../image/logo.svg';\r\nimport Sign from '../image/sign.svg';\r\n\r\nconst NavBarStyled = styled.header`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 999;\r\n    height: 80px;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding-left: 30px;\r\n    padding-right: 30px;\r\n    background-color: #299b01;\r\n    color: white;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n    font-size: 24px;\r\n    margin-left: 15px;\r\n`;\r\n\r\nconst ImgLogo = styled.img`\r\n    width: 50px;\r\n`;\r\n\r\nconst Login = styled.button`\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: transparent;\r\n    border: none;\r\n    outline: none;\r\n    color: white;\r\n    text-transform: uppercase;\r\n    font-family: Roboto;\r\n    font-size: 16px;\r\n    :hover {\r\n        background-color: #7b84c3;\r\n        border-radius: 10px;\r\n    }\r\n    :active {\r\n        background-color: #836dc7;\r\n    }\r\n`;\r\n\r\nconst LoginImg = styled.img`\r\n    margin-bottom: 5px;\r\n    align-self: center;\r\n`;\r\n\r\nexport const NavBar = () => (\r\n    <NavBarStyled>\r\n        <Logo>\r\n            <ImgLogo src={logoImg} alt=\"logo\"/>\r\n            <H1>MrDonald's</H1>\r\n        </Logo>\r\n        <Login>\r\n            <LoginImg src={Sign} alt=\"user\"/>\r\n            Войти\r\n        </Login>\r\n    </NavBarStyled>\r\n);\r\n","const dbMenu = {\r\n\tburger: [\r\n\t\t{\r\n\t\t\tname: 'JS Burger',\r\n\t\t\timg: '/menu/js-burger.png',\r\n\t\t\tid: 1,\r\n\t\t\tprice: 250,\r\n\t\t\ttoppings: ['Бекон', 'Кетчуп', 'Сыр Чеддер', 'Огурцы', 'Помидор', 'Халапеньо'],\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Borsh Burger',\r\n\t\t\timg: '/menu/borsh-burger.png',\r\n\t\t\tid: 2,\r\n\t\t\tprice: 499.9,\r\n\t\t\ttoppings: ['Бекон', 'Красный лук'],\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Freckles Burger',\r\n\t\t\timg: '/menu/freckles-burger.png',\r\n\t\t\tid: 3,\r\n\t\t\tprice: 350,\r\n\t\t\ttoppings: ['Ананас', 'Майонец'],\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Timon Burger',\r\n\t\t\timg: '/menu/black-burger.png',\r\n\t\t\tid: 4,\r\n\t\t\tprice: 150,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'React Burger',\r\n\t\t\timg: '/menu/react-burger.png',\r\n\t\t\tid: 5,\r\n\t\t\tprice: 299.9,\r\n\t\t\ttoppings: ['Кетчуп', 'Сыр Чеддер'],\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Sun Burger',\r\n\t\t\timg: '/menu/sun-burger.png',\r\n\t\t\tid: 6,\r\n\t\t\tprice: 200,\r\n\t\t\ttoppings: ['Сыр Чеддер', 'Красный лук'],\r\n\t\t},\r\n\t],\r\n\tother: [\r\n\t\t{\r\n\t\t\tname: 'Coka',\r\n\t\t\timg: '/menu/soda.png',\r\n\t\t\tid: 1,\r\n\t\t\tprice: 50,\r\n\t\t\tchoices: ['Coca-cola', 'Fanta', 'Mirinda', 'Sprite'],\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Чайкофф',\r\n\t\t\timg: '/menu/tea.png',\r\n\t\t\tid: 2,\r\n\t\t\tprice: 70,\r\n\t\t\tchoices: ['Черный', 'Зеленый'],\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Лукошко Фри',\r\n\t\t\timg: '/menu/french-fries.png',\r\n\t\t\tid: 3,\r\n\t\t\tprice: 75,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Нагиевцы',\r\n\t\t\timg: '/menu/nuggets.png',\r\n\t\t\tid: 4,\r\n\t\t\tprice: 100,\r\n\t\t\tchoices: ['Филе', 'Крылья'],\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Кофе',\r\n\t\t\timg: '/menu/coffee.png',\r\n\t\t\tid: 5,\r\n\t\t\tprice: 150,\r\n\t\t\tchoices: ['Эспрессо', 'Капучино'],\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Гринч',\r\n\t\t\timg: '/menu/green-coffee.png',\r\n\t\t\tid: 6,\r\n\t\t\tprice: 175.25\r\n\t\t},\r\n\t]\r\n};\r\n\r\nexport default dbMenu;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst List = styled.ul`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    position: relative;\r\n    width: 400px;\r\n    height: 155px;\r\n    background-image: ${({ img }) => `url(${ img })`};\r\n    background-position: center;\r\n    background-size: cover;\r\n    margin-top: 30px;\r\n    margin-right: 30px;\r\n    padding: 15px;\r\n    color: white;\r\n    z-index: 1;\r\n    font-size: 30px;\r\n    &:after {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        left: 0;\r\n        background-color: black;\r\n        opacity: 40%;\r\n        z-index: -1;\r\n    }\r\n    &:hover {\r\n        cursor: pointer;\r\n        box-shadow: inset 0 0 50px 30px black;\r\n        &:after {\r\n            opacity: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ListItem = ({itemList}) => (\r\n    <List>\r\n        {itemList.map(item => (\r\n            <Item \r\n                key={item.id}\r\n                img={item.img} \r\n            > \r\n            <p>{ item.name }</p>\r\n            <p>{ item.price.toLocaleString('ru-RU', \r\n                {style: 'currency', currency: 'RUB'}) }</p>  \r\n                {item.name}\r\n            </Item>\r\n        ))}\r\n    </List>\r\n)","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BannerImg from '../image/banner.png'\r\n\r\nconst Div = styled.div`\r\n    background-image: ${({ props }) => `url(${ props })`};\r\n    height: 200px;\r\n    width: 100%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n`;\r\n\r\nexport const Banner = (props) => (\r\n    <Div props={BannerImg}/>\r\n)","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport dbMenu from './DBMenu';\r\nimport { ListItem } from './ListItem';\r\nimport { Banner } from './Banner'\r\n\r\nconst MenuStyled = styled.main`\r\n    background-color: #ccc;\r\n    margin-top: 80px;\r\n`;\r\n\r\nconst SectionMenu = styled.section`\r\n    padding: 30px;\r\n\r\n`;\r\n\r\n\r\nexport const Menu = () => (\r\n    <MenuStyled>\r\n        <Banner/>\r\n        <SectionMenu>\r\n            <h2>Бургеры </h2>\r\n            <ListItem itemList={dbMenu.burger}/>\r\n        </SectionMenu>\r\n\r\n        <SectionMenu>\r\n            <h2>Закуски / Напитки </h2>\r\n            <ListItem itemList={dbMenu.other}/>\r\n        </SectionMenu>\r\n    </MenuStyled>\r\n)","import { createGlobalStyle } from 'styled-components';\r\n\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: inherit;\r\n  }\r\n  body {\r\n    margin: 0;\r\n    background-color: #f0f0f0;\r\n    font-family: Roboto, sans-serif;\r\n    font-size: 20px;\r\n    color: black;\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n  input, button {\r\n    font-family: inherit;\r\n  }\r\n  img {\r\n    max-width: 100%;\r\n    height: auto;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  h1, h2, h3 {\r\n    font-family: Pacifico;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  p {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n`;\r\n","import React from 'react';\nimport { NavBar } from './Components/NavBar'\nimport { Menu } from './Components/Menu';\nimport { GlobalStyle } from './Components/GlobalStyle'\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle/>\n      <NavBar/>\n      <Menu/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.cfe37dbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/sign.6ea25215.svg\";"],"sourceRoot":""}